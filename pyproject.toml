[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nicegui-chat"
version = "1.0.0"
description = "A lean, fast chat application built with NiceGUI"
requires-python = ">=3.13"
dependencies = [
    "nicegui>=3.0.0",
    "pydantic>=2.7.0",
    "pydantic-ai>=0.8.0,<1.0",
    "python-dotenv>=1.0.0",
    "structlog>=24.1.0",
    "httpx>=0.27.0",
    "html-sanitizer>=1.0.0",
    "heysol-api-client>=1.2.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "black>=24.0.0",
    "isort>=5.12.0",
    "tox>=4.0.0",
    "pre-commit>=3.0.0",
]

[tool.ruff]
# Fast, lean linting - fail fast on errors
target-version = "py313"
line-length = 88
output-format = "concise"

[tool.ruff.lint]
# Strict error detection for lean code
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
    "PTH", # flake8-use-pathlib
    "PL",  # pylint
]
ignore = [
    "PLR0913", # Too many arguments - allow for explicit APIs
    "PLR0912", # Too many branches - allow for explicit logic
    "PLR2004", # Magic value comparison - allow for explicit values
    "C901",    # Complex structure - allow for explicit control flow
    "PLR0915", # Too many statements - allow for explicit functions
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["PL"]  # Relax pylint rules for tests

[tool.ruff.format]
# Fast formatting for development speed
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.black]
# Minimal, fast formatting
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
# Fast, explicit import sorting
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]

[tool.mypy]
# Strict type checking for explicit code
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

# Performance optimizations - fail fast
show_traceback = false
error_summary = true

# Allow dynamic typing where necessary for flexibility
[[tool.mypy.overrides]]
module = [
    "tests.*",
    "scripts.*",
]
ignore_errors = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]